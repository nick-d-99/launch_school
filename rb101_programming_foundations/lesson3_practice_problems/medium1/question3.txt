Alan wrote the following method, which was intended to show all of the factors of the input number:

def factors(number)
  if number == 0
    return 0
  if number < 0
    number = number * -1
  divisor = number
  factors = []
  begin
    factors << number / divisor if number % divisor == 0
    divisor -= 1
  end until divisor == 0
  factors
end

Alyssa noticed that this will fail if the input is 0, or a negative number, and asked Alan to change the 
loop. How can you make this work without using the begin/end until construct? Note that we're not looking 
to find the factors for 0 or negative numbers, but we just want to handle it gracefully instead of raising 
an exception or going into an infinite loop.

Bonus 1
What is the purpose of the number % divisor == 0 ?

This is to check if the divisor goes in evenly. If number % divisor is anything but 0, it does not divide
evenly.


Bonus 2
What is the purpose of the second-to-last line (line 8) in the method (the factors before the method's end)?

This line serves to return the collected factors.