The Ruby Array class has several methods for removing items from the array. Two of them have very similar names. Let's see how they differ:

numbers = [1, 2, 3, 4, 5]

What do the following method calls do (assume we reset numbers to the original array between method calls)?

numbers.delete_at(1)
numbers.delete(1)

.delete_at() will use the argument as an index while .delete() will look for the argument as a value.
.delete_at() will delete whatever value is stored at index 1 while .delete() will delete any value in the array that equates to 1.